{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { withMap } from './context';\nvar Source = function (_super) {\n  __extends(Source, _super);\n  function Source() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.id = _this.props.id;\n    _this.onStyleDataChange = function () {\n      if (!_this.props.map.getLayer(_this.id)) {\n        _this.initialize();\n        _this.forceUpdate();\n      }\n    };\n    _this.initialize = function () {\n      var map = _this.props.map;\n      var _a = _this.props,\n        geoJsonSource = _a.geoJsonSource,\n        tileJsonSource = _a.tileJsonSource,\n        onSourceAdded = _a.onSourceAdded;\n      if (!map.getSource(_this.id) && (geoJsonSource || tileJsonSource)) {\n        if (geoJsonSource) {\n          map.addSource(_this.id, geoJsonSource);\n        } else if (tileJsonSource) {\n          map.addSource(_this.id, tileJsonSource);\n        }\n        map.on('sourcedata', _this.onData);\n        if (onSourceAdded) {\n          onSourceAdded(map.getSource(_this.id));\n        }\n      }\n    };\n    _this.onData = function () {\n      var map = _this.props.map;\n      var source = map.getSource(_this.props.id);\n      if (!source || !map.isSourceLoaded(_this.props.id)) {\n        return;\n      }\n      var onSourceLoaded = _this.props.onSourceLoaded;\n      if (source && onSourceLoaded) {\n        onSourceLoaded(source);\n      }\n      if (source && _this.props.geoJsonSource && _this.props.geoJsonSource.data) {\n        source.setData(_this.props.geoJsonSource.data);\n      }\n      map.off('sourcedata', _this.onData);\n    };\n    return _this;\n  }\n  Source.prototype.componentDidMount = function () {\n    var map = this.props.map;\n    map.on('styledata', this.onStyleDataChange);\n    this.initialize();\n  };\n  Source.prototype.removeSource = function () {\n    var _this = this;\n    var map = this.props.map;\n    if (map.getSource(this.id)) {\n      var _a = map.getStyle().layers,\n        layers_1 = _a === void 0 ? [] : _a;\n      layers_1 = layers_1.map(function (layer, idx) {\n        var before = (layers_1[idx + 1] || {\n          id: undefined\n        }).id;\n        return __assign({}, layer, {\n          before: before\n        });\n      }).filter(function (layer) {\n        return layer.source === _this.id;\n      });\n      layers_1.forEach(function (layer) {\n        return map.removeLayer(layer.id);\n      });\n      map.removeSource(this.id);\n      return layers_1.reverse();\n    }\n    return [];\n  };\n  Source.prototype.componentWillUnmount = function () {\n    var map = this.props.map;\n    if (!map || !map.getStyle()) {\n      return;\n    }\n    map.off('styledata', this.onStyleDataChange);\n    this.removeSource();\n  };\n  Source.prototype.componentDidUpdate = function (prevProps) {\n    var geoJsonSource = prevProps.geoJsonSource,\n      tileJsonSource = prevProps.tileJsonSource,\n      map = prevProps.map;\n    var source = map.getSource(this.id);\n    if (tileJsonSource && this.props.tileJsonSource) {\n      var urlUpdated = false;\n      var tilesUpdated = false;\n      if (source && source.type === 'vector') {\n        var hasNewSourceUrl = tileJsonSource.url !== this.props.tileJsonSource.url;\n        if (hasNewSourceUrl && this.props.tileJsonSource.url !== undefined) {\n          source.setUrl(this.props.tileJsonSource.url);\n          urlUpdated = true;\n        }\n        var hasNewSourceTiles = tileJsonSource.tiles !== this.props.tileJsonSource.tiles;\n        if (hasNewSourceTiles && this.props.tileJsonSource.tiles !== undefined) {\n          source.setTiles(this.props.tileJsonSource.tiles);\n          tilesUpdated = true;\n        }\n      }\n      var hasNewTilesSource = !urlUpdated && tileJsonSource.url !== this.props.tileJsonSource.url || !tilesUpdated && tileJsonSource.tiles !== this.props.tileJsonSource.tiles || tileJsonSource.minzoom !== this.props.tileJsonSource.minzoom || tileJsonSource.maxzoom !== this.props.tileJsonSource.maxzoom;\n      if (hasNewTilesSource) {\n        var layers = this.removeSource();\n        map.addSource(this.id, this.props.tileJsonSource);\n        layers.forEach(function (layer) {\n          return map.addLayer(layer, layer.before);\n        });\n      }\n    }\n    if (geoJsonSource && this.props.geoJsonSource && this.props.geoJsonSource.data !== geoJsonSource.data && this.props.geoJsonSource.data && source && source.type === 'geojson') {\n      source.setData(this.props.geoJsonSource.data);\n    }\n  };\n  Source.prototype.render = function () {\n    return null;\n  };\n  return Source;\n}(React.Component);\nexport { Source };\nexport default withMap(Source);","map":{"version":3,"names":["React","withMap","Source","_super","__extends","_this","apply","arguments","id","props","onStyleDataChange","map","getLayer","initialize","forceUpdate","_a","geoJsonSource","tileJsonSource","onSourceAdded","getSource","addSource","on","onData","source","isSourceLoaded","onSourceLoaded","data","setData","off","prototype","componentDidMount","removeSource","getStyle","layers","layers_1","layer","idx","before","undefined","__assign","filter","forEach","removeLayer","reverse","componentWillUnmount","componentDidUpdate","prevProps","urlUpdated","tilesUpdated","type","hasNewSourceUrl","url","setUrl","hasNewSourceTiles","tiles","setTiles","hasNewTilesSource","minzoom","maxzoom","addLayer","render","Component"],"sources":["/Users/mikolakondratuk/FossoSushi/node_modules/react-mapbox-gl/src/source.ts"],"sourcesContent":["import * as React from 'react';\nimport { Map, GeoJSONSource, GeoJSONSourceRaw, Layer } from 'mapbox-gl';\nimport { TilesJson } from './util/types';\nimport { withMap } from './context';\n\nexport interface Props {\n  id: string;\n  geoJsonSource?: GeoJSONSourceRaw;\n  tileJsonSource?: TilesJson;\n  map: Map;\n  onSourceAdded?: (source: GeoJSONSource | TilesJson) => void;\n  onSourceLoaded?: (source: GeoJSONSource | TilesJson) => void;\n}\n\nexport type LayerWithBefore = Layer & { before?: string };\n\nexport class Source extends React.Component<Props> {\n  private id = this.props.id;\n\n  private onStyleDataChange = () => {\n    // if the style of the map has been updated we won't have any sources anymore,\n    // add it back to the map and force re-rendering to redraw it\n    if (!this.props.map.getLayer(this.id)) {\n      this.initialize();\n      this.forceUpdate();\n    }\n  };\n\n  public componentDidMount() {\n    const { map } = this.props;\n\n    map.on('styledata', this.onStyleDataChange);\n    this.initialize();\n  }\n\n  private initialize = () => {\n    const { map } = this.props;\n    const { geoJsonSource, tileJsonSource, onSourceAdded } = this.props;\n    if (!map.getSource(this.id) && (geoJsonSource || tileJsonSource)) {\n      if (geoJsonSource) {\n        map.addSource(this.id, geoJsonSource);\n      } else if (tileJsonSource) {\n        map.addSource(this.id, tileJsonSource);\n      }\n\n      map.on('sourcedata', this.onData);\n\n      if (onSourceAdded) {\n        onSourceAdded(map.getSource(this.id) as GeoJSONSource | TilesJson);\n      }\n    }\n  };\n\n  private onData = () => {\n    const { map } = this.props;\n\n    const source = map.getSource(this.props.id) as GeoJSONSource;\n    if (!source || !map.isSourceLoaded(this.props.id)) {\n      return;\n    }\n\n    const { onSourceLoaded } = this.props;\n    if (source && onSourceLoaded) {\n      onSourceLoaded(source);\n    }\n    // Will fix datasource being empty\n    if (source && this.props.geoJsonSource && this.props.geoJsonSource.data) {\n      source.setData(this.props.geoJsonSource.data);\n    }\n    map.off('sourcedata', this.onData);\n  };\n\n  public removeSource(): LayerWithBefore[] {\n    const { map } = this.props;\n\n    if (map.getSource(this.id)) {\n      let { layers = [] } = map.getStyle();\n\n      layers = layers\n        .map((layer, idx): LayerWithBefore => {\n          const { id: before } = layers[idx + 1] || { id: undefined };\n          return { ...layer, before };\n        })\n        .filter(layer => layer.source === this.id);\n\n      layers.forEach(layer => map.removeLayer(layer.id));\n\n      map.removeSource(this.id);\n\n      return layers.reverse();\n    }\n\n    return [];\n  }\n\n  public componentWillUnmount() {\n    const { map } = this.props;\n\n    if (!map || !map.getStyle()) {\n      return;\n    }\n\n    map.off('styledata', this.onStyleDataChange);\n    this.removeSource();\n  }\n\n  public componentDidUpdate(prevProps: Props) {\n    const { geoJsonSource, tileJsonSource, map } = prevProps;\n    const source = map.getSource(this.id);\n\n    // Update tilesJsonSource\n    if (tileJsonSource && this.props.tileJsonSource) {\n      let urlUpdated = false;\n      let tilesUpdated = false;\n\n      if (source && source.type === 'vector') {\n        const hasNewSourceUrl =\n          tileJsonSource.url !== this.props.tileJsonSource.url;\n\n        if (hasNewSourceUrl && this.props.tileJsonSource.url !== undefined) {\n          source.setUrl(this.props.tileJsonSource.url);\n          urlUpdated = true;\n        }\n\n        const hasNewSourceTiles =\n          tileJsonSource.tiles !== this.props.tileJsonSource.tiles;\n\n        if (\n          hasNewSourceTiles &&\n          this.props.tileJsonSource.tiles !== undefined\n        ) {\n          source.setTiles(this.props.tileJsonSource.tiles);\n          tilesUpdated = true;\n        }\n      }\n\n      // Prefer the more targetted updates, but fallback to swapping out the entire source\n      // This applies to raster tile sources, for example\n      const hasNewTilesSource =\n        (!urlUpdated && tileJsonSource.url !== this.props.tileJsonSource.url) ||\n        // Check for reference equality on tiles array\n        (!tilesUpdated &&\n          tileJsonSource.tiles !== this.props.tileJsonSource.tiles) ||\n        tileJsonSource.minzoom !== this.props.tileJsonSource.minzoom ||\n        tileJsonSource.maxzoom !== this.props.tileJsonSource.maxzoom;\n\n      if (hasNewTilesSource) {\n        const layers = this.removeSource();\n        map.addSource(this.id, this.props.tileJsonSource);\n\n        layers.forEach(layer => map.addLayer(layer, layer.before));\n      }\n    }\n\n    // Update geoJsonSource data\n    if (\n      geoJsonSource &&\n      this.props.geoJsonSource &&\n      this.props.geoJsonSource.data !== geoJsonSource.data &&\n      this.props.geoJsonSource.data &&\n      source &&\n      source.type === 'geojson'\n    ) {\n      source.setData(this.props.geoJsonSource.data);\n    }\n  }\n\n  public render() {\n    return null;\n  }\n}\n\nexport default withMap(Source);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}