{"ast":null,"code":"import React,{useState}from'react';import ModalMenu from'../components/ModalMenu/ModalMenu';import Footer from'../components/Footer/Footer';import Header from'../components/Header/Header';import FilterMenu from'../components/FilterMenu/FilterMenu';import MenuList from'../components/MenuList/MenuList';import DeliveryForm from'../components/DeliveryForm/DeliveryForm';import PickupForm from'../components/PickupForm/PickupForm';import{useGlobalState}from'../GlobalStateContext/GlobalStateContext';import Modal from'../components/Modal/Modal';import emailjs from'@emailjs/browser';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Order=()=>{const serviceId='service_jp5ey5m';const userId='685QO5Je5D_QH2K8C';const botToken='6670329183:AAFmT1iq-5X0_2Ahieq1O7qn_6m7XdYLHJE';const chatId='692784566';const[selectedOption,setSelectedOption]=useState('DELIVERY');const{globalState,setGlobalState}=useGlobalState();const[isModalOpen,setIsModalOpen]=useState(false);const[formDataPickup,setFormDataPickup]=useState({firstName:'',phoneNumber:'',pickingTime:'',allergies:''});const[formDataDelivery,setFormDataDelivery]=useState({firstName:'',phoneNumber:'',address:'',deliveryTime:'',allergies:''});const orderArr=globalState.orderArr;const title={textAlign:'center',marginTop:'40px'};const box={background:'#103533'};const nameAndQuantityArray=orderArr.map(item=>\"\".concat(item.name,\":(\").concat(item.quantity,\")pcs.\"));const text=nameAndQuantityArray.join('\\n');const handleSubmitPickup=async e=>{e.preventDefault();setIsModalOpen(true);const smsData={name:formDataPickup.firstName,number:formDataPickup.phoneNumber,pickingTime:formDataPickup.pickingTime,allergies:formDataPickup.allergies,sushi:text};// Створіть повідомлення для відправки до Telegram\nconst message=\"Name: \".concat(smsData.name,\"\\nNumber: \").concat(smsData.number,\"\\nPicking Time: \").concat(smsData.pickingTime,\"\\nAllergies: \").concat(smsData.allergies,\"\\nSushi: \").concat(smsData.sushi);try{// Відправка HTTP-запиту до Telegram Bot API для відправки повідомлення\nconst response=await fetch(\"https://api.telegram.org/bot\".concat(botToken,\"/sendMessage\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({chat_id:chatId,text:message})});if(response.ok){console.log('Message sent to Telegram successfully');}else{console.error('Error sending message to Telegram:',response.statusText);}}catch(error){console.error('Error sending message to Telegram:',error);}// Скидаємо стан замовлення та прокручуємо сторінку догори\nsetGlobalState(prevState=>({...prevState,orderArr:[]}));window.scrollTo(0,0);};const handleSubmitDelivery=async e=>{e.preventDefault();//     fetch(`https://api.telegram.org/bot${botToken}/getUpdates`)\n// .then(response => response.json())\n// .then(data => {\n//     if (data.ok) {\n//         // Оновлення успішно отримано\n//         const updates = data.result;\n//         // Перебираємо оновлення, щоб знайти `chat_id`\n//         updates.forEach(update => {\n//             const chatId = update.message?.chat?.id;\n//             console.log(`Chat ID: ${chatId}`);\n//         });\n//     } else {\n//         console.error('Failed to get updates:', data.description);\n//     }\n// })\n// .catch(error => {\n//     console.error('Error:', error);\n// });\nsetIsModalOpen(true);const smsData={name:formDataDelivery.firstName,number:formDataDelivery.phoneNumber,address:formDataDelivery.address,deliveryTime:formDataDelivery.deliveryTime,allergies:formDataDelivery.allergies,sushi:text};// Відправлення SMS\nconst templateId='template_1lcxxp4';emailjs.send(serviceId,templateId,smsData,userId).then(response=>{console.log('SMS sent successfully:',response.status);}).catch(error=>{console.error('Error sending SMS:',error);});// Відправлення повідомлення у Telegram\nconst sendToTelegram=async()=>{const message=\"Name: \".concat(smsData.name,\"\\nNumber: \").concat(smsData.number,\"\\nAddress: \").concat(smsData.address,\"\\nDelivery Time: \").concat(smsData.deliveryTime,\"\\nAllergies: \").concat(smsData.allergies,\"\\nSushi: \").concat(smsData.sushi);// Відправляємо HTTP-запит до Telegram Bot API для відправки повідомлення\ntry{const response=await fetch(\"https://api.telegram.org/bot\".concat(botToken,\"/sendMessage\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({chat_id:chatId,text:message})});if(response.ok){console.log('Message sent to Telegram successfully');}else{console.error('Error sending message to Telegram:',response.statusText);}}catch(error){console.error('Error sending message to Telegram:',error);}};// Викликаємо функцію для відправлення повідомлення у Telegram\nawait sendToTelegram();// Скидаємо стан замовлення та прокручуємо сторінку догори\nsetGlobalState(prevState=>({...prevState,orderArr:[]}));window.scrollTo(0,0);};return/*#__PURE__*/_jsxs(\"div\",{style:box,children:[/*#__PURE__*/_jsx(Modal,{isModalOpen:isModalOpen,setIsModalOpen:setIsModalOpen}),/*#__PURE__*/_jsx(ModalMenu,{}),/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(FilterMenu,{selectedOption:selectedOption,setSelectedOption:setSelectedOption,type:\"order\"}),/*#__PURE__*/_jsx(\"h2\",{style:title,children:\"YOUR ORDER\"}),/*#__PURE__*/_jsx(MenuList,{type:\"order\",menuList:orderArr}),orderArr.length>0&&(selectedOption==='DELIVERY'?/*#__PURE__*/_jsx(DeliveryForm,{formData:formDataDelivery,setFormData:setFormDataDelivery,handleSubmit:handleSubmitDelivery}):/*#__PURE__*/_jsx(PickupForm,{formData:formDataPickup,setFormData:setFormDataPickup,handleSubmit:handleSubmitPickup})),/*#__PURE__*/_jsx(Footer,{})]});};export default Order;","map":{"version":3,"names":["React","useState","ModalMenu","Footer","Header","FilterMenu","MenuList","DeliveryForm","PickupForm","useGlobalState","Modal","emailjs","jsx","_jsx","jsxs","_jsxs","Order","serviceId","userId","botToken","chatId","selectedOption","setSelectedOption","globalState","setGlobalState","isModalOpen","setIsModalOpen","formDataPickup","setFormDataPickup","firstName","phoneNumber","pickingTime","allergies","formDataDelivery","setFormDataDelivery","address","deliveryTime","orderArr","title","textAlign","marginTop","box","background","nameAndQuantityArray","map","item","concat","name","quantity","text","join","handleSubmitPickup","e","preventDefault","smsData","number","sushi","message","response","fetch","method","headers","body","JSON","stringify","chat_id","ok","console","log","error","statusText","prevState","window","scrollTo","handleSubmitDelivery","templateId","send","then","status","catch","sendToTelegram","style","children","type","menuList","length","formData","setFormData","handleSubmit"],"sources":["/Users/mikolakondratuk/FossoSushi/src/pages/OrderPage.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport ModalMenu from '../components/ModalMenu/ModalMenu';\nimport Footer from '../components/Footer/Footer';\nimport Header from '../components/Header/Header';\nimport FilterMenu from '../components/FilterMenu/FilterMenu';\nimport MenuList from '../components/MenuList/MenuList';\nimport DeliveryForm from '../components/DeliveryForm/DeliveryForm';\nimport PickupForm from '../components/PickupForm/PickupForm';\nimport { useGlobalState } from '../GlobalStateContext/GlobalStateContext';\nimport Modal from '../components/Modal/Modal';\nimport emailjs from '@emailjs/browser';\n\nconst Order = () => {\n    const serviceId = 'service_jp5ey5m';\n    const userId = '685QO5Je5D_QH2K8C';\n    const botToken = '6670329183:AAFmT1iq-5X0_2Ahieq1O7qn_6m7XdYLHJE';\n    const chatId = '692784566';\n    const [selectedOption, setSelectedOption] = useState('DELIVERY');\n    const { globalState, setGlobalState } = useGlobalState();\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [formDataPickup, setFormDataPickup] = useState({\n        firstName: '',\n        phoneNumber: '',\n        pickingTime: '',\n        allergies: '',\n    });\n    const [formDataDelivery, setFormDataDelivery] = useState({\n        firstName: '',\n        phoneNumber: '',\n        address: '',\n        deliveryTime: '',\n        allergies: '',\n    });\n    const orderArr = globalState.orderArr;\n    const title = {\n        textAlign: 'center',\n        marginTop: '40px',\n    };\n    const box = {\n        background: '#103533'\n    };\n    const nameAndQuantityArray = orderArr.map(item => `${item.name}:(${item.quantity})pcs.`)\n    const text = nameAndQuantityArray.join('\\n');\n    const handleSubmitPickup = async (e) => {\n        e.preventDefault();\n        setIsModalOpen(true);\n\n        const smsData = {\n            name: formDataPickup.firstName,\n            number: formDataPickup.phoneNumber,\n            pickingTime: formDataPickup.pickingTime,\n            allergies: formDataPickup.allergies,\n            sushi: text,\n        };\n        // Створіть повідомлення для відправки до Telegram\n        const message = `Name: ${smsData.name}\\nNumber: ${smsData.number}\\nPicking Time: ${smsData.pickingTime}\\nAllergies: ${smsData.allergies}\\nSushi: ${smsData.sushi}`;\n        try {\n            // Відправка HTTP-запиту до Telegram Bot API для відправки повідомлення\n            const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    chat_id: chatId,\n                    text: message,\n                }),\n            });\n\n            if (response.ok) {\n                console.log('Message sent to Telegram successfully');\n            } else {\n                console.error('Error sending message to Telegram:', response.statusText);\n            }\n        } catch (error) {\n            console.error('Error sending message to Telegram:', error);\n        }\n\n        // Скидаємо стан замовлення та прокручуємо сторінку догори\n        setGlobalState(prevState => ({\n            ...prevState,\n            orderArr: []\n        }));\n        window.scrollTo(0, 0);\n    };\n\n\n    const handleSubmitDelivery = async (e) => {\n        e.preventDefault();\n    //     fetch(`https://api.telegram.org/bot${botToken}/getUpdates`)\n    // .then(response => response.json())\n    // .then(data => {\n    //     if (data.ok) {\n    //         // Оновлення успішно отримано\n    //         const updates = data.result;\n\n    //         // Перебираємо оновлення, щоб знайти `chat_id`\n    //         updates.forEach(update => {\n    //             const chatId = update.message?.chat?.id;\n    //             console.log(`Chat ID: ${chatId}`);\n    //         });\n    //     } else {\n    //         console.error('Failed to get updates:', data.description);\n    //     }\n    // })\n    // .catch(error => {\n    //     console.error('Error:', error);\n    // });\n        setIsModalOpen(true);\n\n        const smsData = {\n            name: formDataDelivery.firstName,\n            number: formDataDelivery.phoneNumber,\n            address: formDataDelivery.address,\n            deliveryTime: formDataDelivery.deliveryTime,\n            allergies: formDataDelivery.allergies,\n            sushi: text,\n        };\n\n        // Відправлення SMS\n        const templateId = 'template_1lcxxp4';\n        emailjs.send(serviceId, templateId, smsData, userId)\n            .then((response) => {\n                console.log('SMS sent successfully:', response.status);\n            })\n            .catch((error) => {\n                console.error('Error sending SMS:', error);\n            });\n\n        // Відправлення повідомлення у Telegram\n        const sendToTelegram = async () => {\n            const message = `Name: ${smsData.name}\\nNumber: ${smsData.number}\\nAddress: ${smsData.address}\\nDelivery Time: ${smsData.deliveryTime}\\nAllergies: ${smsData.allergies}\\nSushi: ${smsData.sushi}`;\n            // Відправляємо HTTP-запит до Telegram Bot API для відправки повідомлення\n            try {\n                const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        chat_id: chatId,\n                        text: message,\n                    }),\n                });\n\n                if (response.ok) {\n                    console.log('Message sent to Telegram successfully');\n                } else {\n                    console.error('Error sending message to Telegram:', response.statusText);\n                }\n            } catch (error) {\n                console.error('Error sending message to Telegram:', error);\n            }\n        };\n        // Викликаємо функцію для відправлення повідомлення у Telegram\n        await sendToTelegram();\n        // Скидаємо стан замовлення та прокручуємо сторінку догори\n        setGlobalState(prevState => ({\n            ...prevState,\n            orderArr: []\n        }));\n        window.scrollTo(0, 0);\n    };\n\n    \n    return (\n        <div style={box}>\n            <Modal isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen} />\n            <ModalMenu />\n            <Header />\n            <FilterMenu selectedOption={selectedOption} setSelectedOption={setSelectedOption} type='order' />\n            <h2 style={title}>YOUR ORDER</h2>\n            <MenuList type='order' menuList={orderArr} />\n            {orderArr.length > 0 && (selectedOption === 'DELIVERY' ?\n                <DeliveryForm\n                    formData={formDataDelivery}\n                    setFormData={setFormDataDelivery}\n                    handleSubmit={handleSubmitDelivery}\n                /> :\n                <PickupForm\n                    formData={formDataPickup}\n                    setFormData={setFormDataPickup}\n                    handleSubmit={handleSubmitPickup}\n                />)}\n            <Footer />\n        </div>\n    );\n}\n\nexport default Order;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}