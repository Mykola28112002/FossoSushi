{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nvar isEqual = require('deep-equal');\nimport diff from './util/diff';\nimport { generateID } from './util/uid';\nimport { withMap } from './context';\nvar types = ['symbol', 'line', 'fill', 'fill-extrusion', 'circle'];\nvar toCamelCase = function (str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\n    return index === 0 ? letter.toLowerCase() : letter.toUpperCase();\n  }).replace(/[\\s+]|-/g, '');\n};\nvar eventToHandler = {\n  mousemove: 'OnMouseMove',\n  mouseenter: 'OnMouseEnter',\n  mouseleave: 'OnMouseLeave',\n  mousedown: 'OnMouseDown',\n  mouseup: 'OnMouseUp',\n  click: 'OnClick'\n};\nvar GeoJSONLayer = function (_super) {\n  __extends(GeoJSONLayer, _super);\n  function GeoJSONLayer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.id = _this.props.id || \"geojson-\" + generateID();\n    _this.source = __assign({\n      type: 'geojson'\n    }, _this.props.sourceOptions, {\n      data: _this.props.data\n    });\n    _this.layerIds = [];\n    _this.buildLayerId = function (type) {\n      return _this.id + \"-\" + type;\n    };\n    _this.createLayer = function (type) {\n      var _a = _this.props,\n        before = _a.before,\n        layerOptions = _a.layerOptions,\n        map = _a.map;\n      var layerId = _this.buildLayerId(type);\n      _this.layerIds.push(layerId);\n      var paint = _this.props[toCamelCase(type) + \"Paint\"] || {};\n      var visibility = Object.keys(paint).length ? 'visible' : 'none';\n      var layout = _this.props[toCamelCase(type) + \"Layout\"] || {\n        visibility: visibility\n      };\n      var layer = __assign({\n        id: layerId,\n        source: _this.id,\n        type: type,\n        paint: paint,\n        layout: layout\n      }, layerOptions);\n      map.addLayer(layer, before);\n      _this.mapLayerMouseHandlers(type);\n    };\n    _this.mapLayerMouseHandlers = function (type) {\n      var map = _this.props.map;\n      var layerId = _this.buildLayerId(type);\n      var events = Object.keys(eventToHandler);\n      events.forEach(function (event) {\n        var handler = _this.props[\"\" + toCamelCase(type) + eventToHandler[event]] || null;\n        if (handler) {\n          map.on(event, layerId, handler);\n        }\n      });\n    };\n    _this.onStyleDataChange = function () {\n      if (!_this.props.map.getSource(_this.id)) {\n        _this.unbind();\n        _this.initialize();\n        _this.forceUpdate();\n      }\n    };\n    _this.isGeoJSONSource = function (source) {\n      return !!source && typeof source.setData === 'function';\n    };\n    return _this;\n  }\n  GeoJSONLayer.prototype.initialize = function () {\n    var map = this.props.map;\n    map.addSource(this.id, this.source);\n    this.createLayer('symbol');\n    this.createLayer('line');\n    this.createLayer('fill');\n    this.createLayer('fill-extrusion');\n    this.createLayer('circle');\n  };\n  GeoJSONLayer.prototype.unbind = function () {\n    var _this = this;\n    var map = this.props.map;\n    if (map.getSource(this.id)) {\n      var layers = map.getStyle().layers;\n      if (layers) {\n        layers.filter(function (layer) {\n          return layer.source === _this.id;\n        }).forEach(function (layer) {\n          return map.removeLayer(layer.id);\n        });\n      }\n      map.removeSource(this.id);\n    }\n    types.forEach(function (type) {\n      var events = Object.keys(eventToHandler);\n      events.forEach(function (event) {\n        var prop = toCamelCase(type) + eventToHandler[event];\n        if (_this.props[prop]) {\n          map.off(event, _this.buildLayerId(type), _this.props[prop]);\n        }\n      });\n    });\n    this.layerIds.forEach(function (lId) {\n      if (map.getLayer(lId)) {\n        map.removeLayer(lId);\n      }\n    });\n  };\n  GeoJSONLayer.prototype.componentDidMount = function () {\n    var map = this.props.map;\n    this.initialize();\n    map.on('styledata', this.onStyleDataChange);\n  };\n  GeoJSONLayer.prototype.componentWillUnmount = function () {\n    var map = this.props.map;\n    if (!map || !map.getStyle()) {\n      return;\n    }\n    map.off('styledata', this.onStyleDataChange);\n    this.unbind();\n  };\n  GeoJSONLayer.prototype.componentDidUpdate = function (prevProps) {\n    var _this = this;\n    var data = prevProps.data,\n      before = prevProps.before,\n      layerOptions = prevProps.layerOptions,\n      map = prevProps.map;\n    var source = map.getSource(this.id);\n    if (!this.isGeoJSONSource(source)) {\n      return;\n    }\n    if (this.props.data !== data) {\n      source.setData(this.props.data);\n      this.source = __assign({\n        type: 'geojson'\n      }, this.props.sourceOptions, {\n        data: this.props.data\n      });\n    }\n    var layerFilterChanged = this.props.layerOptions && layerOptions && !isEqual(this.props.layerOptions.filter, layerOptions.filter);\n    types.forEach(function (type) {\n      var layerId = _this.buildLayerId(type);\n      if (_this.props.layerOptions && layerFilterChanged) {\n        map.setFilter(layerId, _this.props.layerOptions.filter || []);\n      }\n      var paintProp = toCamelCase(type) + 'Paint';\n      if (!isEqual(prevProps[paintProp], _this.props[paintProp])) {\n        var paintDiff_1 = diff(prevProps[paintProp], _this.props[paintProp]);\n        Object.keys(paintDiff_1).forEach(function (key) {\n          map.setPaintProperty(layerId, key, paintDiff_1[key]);\n        });\n      }\n      var layoutProp = toCamelCase(type) + 'Layout';\n      if (!isEqual(prevProps[layoutProp], _this.props[layoutProp])) {\n        var layoutDiff_1 = diff(prevProps[layoutProp], _this.props[layoutProp]);\n        Object.keys(layoutDiff_1).forEach(function (key) {\n          map.setLayoutProperty(layerId, key, layoutDiff_1[key]);\n        });\n      }\n      var events = Object.keys(eventToHandler);\n      events.forEach(function (event) {\n        var prop = toCamelCase(type) + eventToHandler[event];\n        if (prevProps[prop] !== _this.props[prop]) {\n          if (prevProps[prop]) {\n            map.off(event, layerId, prevProps[prop]);\n          }\n          if (_this.props[prop]) {\n            map.on(event, layerId, _this.props[prop]);\n          }\n        }\n      });\n      if (before !== _this.props.before) {\n        map.moveLayer(layerId, _this.props.before);\n      }\n    });\n  };\n  GeoJSONLayer.prototype.render = function () {\n    return null;\n  };\n  return GeoJSONLayer;\n}(React.Component);\nexport { GeoJSONLayer };\nexport default withMap(GeoJSONLayer);","map":{"version":3,"names":["React","isEqual","require","diff","generateID","withMap","types","toCamelCase","str","replace","letter","index","toLowerCase","toUpperCase","eventToHandler","mousemove","mouseenter","mouseleave","mousedown","mouseup","click","GeoJSONLayer","_super","__extends","_this","apply","arguments","id","props","source","__assign","type","sourceOptions","data","layerIds","buildLayerId","createLayer","_a","before","layerOptions","map","layerId","push","paint","visibility","Object","keys","length","layout","layer","addLayer","mapLayerMouseHandlers","events","forEach","event","handler","on","onStyleDataChange","getSource","unbind","initialize","forceUpdate","isGeoJSONSource","setData","prototype","addSource","layers","getStyle","filter","removeLayer","removeSource","prop","off","lId","getLayer","componentDidMount","componentWillUnmount","componentDidUpdate","prevProps","layerFilterChanged","setFilter","paintProp","paintDiff_1","key","setPaintProperty","layoutProp","layoutDiff_1","setLayoutProperty","moveLayer","render","Component"],"sources":["/Users/mikolakondratuk/FossoSushi/node_modules/react-mapbox-gl/src/geojson-layer.ts"],"sourcesContent":["import * as React from 'react';\nimport * as MapboxGL from 'mapbox-gl';\nconst isEqual = require('deep-equal'); //tslint:disable-line\nimport diff from './util/diff';\nimport { generateID } from './util/uid';\nimport { Sources, LayerType } from './util/types';\nimport { withMap } from './context';\n\nconst types = ['symbol', 'line', 'fill', 'fill-extrusion', 'circle'];\nconst toCamelCase = (str: string) =>\n  str\n    .replace(\n      /(?:^\\w|[A-Z]|\\b\\w)/g,\n      (letter, index) =>\n        index === 0 ? letter.toLowerCase() : letter.toUpperCase()\n    )\n    .replace(/[\\s+]|-/g, '');\n\nconst eventToHandler = {\n  mousemove: 'OnMouseMove',\n  mouseenter: 'OnMouseEnter',\n  mouseleave: 'OnMouseLeave',\n  mousedown: 'OnMouseDown',\n  mouseup: 'OnMouseUp',\n  click: 'OnClick'\n};\n\n// tslint:disable-next-line:no-any\nexport type MouseEvent = (evt: any) => any;\n\nexport interface LineProps {\n  linePaint?: MapboxGL.LinePaint;\n  lineLayout?: MapboxGL.LineLayout;\n  lineOnMouseMove?: MouseEvent;\n  lineOnMouseEnter?: MouseEvent;\n  lineOnMouseLeave?: MouseEvent;\n  lineOnMouseDown?: MouseEvent;\n  lineOnMouseUp?: MouseEvent;\n  lineOnClick?: MouseEvent;\n}\n\nexport interface CircleProps {\n  circlePaint?: MapboxGL.CirclePaint;\n  circleLayout?: MapboxGL.CircleLayout;\n  circleOnMouseMove?: MouseEvent;\n  circleOnMouseEnter?: MouseEvent;\n  circleOnMouseLeave?: MouseEvent;\n  circleOnMouseDown?: MouseEvent;\n  circleOnMouseUp?: MouseEvent;\n  circleOnClick?: MouseEvent;\n}\n\nexport interface SymbolProps {\n  symbolLayout?: MapboxGL.SymbolLayout;\n  symbolPaint?: MapboxGL.SymbolPaint;\n  symbolOnMouseMove?: MouseEvent;\n  symbolOnMouseEnter?: MouseEvent;\n  symbolOnMouseLeave?: MouseEvent;\n  symbolOnMouseDown?: MouseEvent;\n  symbolOnMouseUp?: MouseEvent;\n  symbolOnClick?: MouseEvent;\n}\n\nexport interface FillProps {\n  fillLayout?: MapboxGL.FillLayout;\n  fillPaint?: MapboxGL.FillPaint;\n  fillOnMouseMove?: MouseEvent;\n  fillOnMouseEnter?: MouseEvent;\n  fillOnMouseLeave?: MouseEvent;\n  fillOnMouseDown?: MouseEvent;\n  fillOnMouseUp?: MouseEvent;\n  fillOnClick?: MouseEvent;\n}\n\nexport interface FillExtrusionProps {\n  fillExtrusionLayout?: MapboxGL.FillExtrusionLayout;\n  fillExtrusionPaint?: MapboxGL.FillExtrusionPaint;\n  fillExtrusionOnMouseMove?: MouseEvent;\n  fillExtrusionOnMouseEnter?: MouseEvent;\n  fillExtrusionOnMouseLeave?: MouseEvent;\n  fillExtrusionOnMouseDown?: MouseEvent;\n  fillExtrusionOnMouseUp?: MouseEvent;\n  fillExtrusionOnClick?: MouseEvent;\n}\n\nexport interface Props\n  extends LineProps,\n    CircleProps,\n    SymbolProps,\n    FillProps,\n    FillExtrusionProps {\n  id?: string;\n  data:\n    | GeoJSON.Feature<GeoJSON.Geometry, GeoJSON.GeoJsonProperties>\n    | GeoJSON.FeatureCollection<GeoJSON.Geometry>\n    | string;\n  layerOptions?: MapboxGL.Layer;\n  sourceOptions?:\n    | MapboxGL.VectorSource\n    | MapboxGL.RasterSource\n    | MapboxGL.GeoJSONSource\n    | MapboxGL.GeoJSONSourceRaw;\n  before?: string;\n  map: MapboxGL.Map;\n}\n\ntype MapboxEventTypes = Array<keyof MapboxGL.MapLayerEventType>;\n\ntype Paints =\n  | MapboxGL.LinePaint\n  | MapboxGL.SymbolPaint\n  | MapboxGL.CirclePaint\n  | MapboxGL.FillExtrusionPaint;\ntype Layouts =\n  | MapboxGL.FillLayout\n  | MapboxGL.LineLayout\n  | MapboxGL.CircleLayout\n  | MapboxGL.FillExtrusionLayout;\n\nexport class GeoJSONLayer extends React.Component<Props> {\n  private id: string = this.props.id || `geojson-${generateID()}`;\n\n  // TODO: Refactor to use defaultProps\n  private source: Sources = {\n    type: 'geojson',\n    ...this.props.sourceOptions,\n    data: this.props.data\n    // tslint:disable-next-line:no-any\n  } as any;\n\n  private layerIds: string[] = [];\n\n  private buildLayerId = (type: string) => {\n    return `${this.id}-${type}`;\n  };\n\n  private createLayer = (type: LayerType) => {\n    const { before, layerOptions, map } = this.props;\n\n    const layerId = this.buildLayerId(type);\n    this.layerIds.push(layerId);\n\n    const paint: Paints = this.props[`${toCamelCase(type)}Paint`] || {};\n\n    // default undefined layers to invisible\n    const visibility = Object.keys(paint).length ? 'visible' : 'none';\n    const layout: Layouts = this.props[`${toCamelCase(type)}Layout`] || {\n      visibility\n    };\n\n    const layer: MapboxGL.Layer = {\n      id: layerId,\n      source: this.id,\n      // TODO: Fix mapbox-gl types\n      // tslint:disable-next-line:no-any\n      type: type as any,\n      // TODO: Fix mapbox-gl types\n      // tslint:disable-next-line:no-any\n      paint: paint as any,\n      layout,\n      ...layerOptions\n    };\n\n    map.addLayer(layer, before);\n\n    this.mapLayerMouseHandlers(type);\n  };\n\n  private mapLayerMouseHandlers = (type: string) => {\n    const { map } = this.props;\n\n    const layerId = this.buildLayerId(type);\n\n    const events = Object.keys(eventToHandler) as MapboxEventTypes;\n\n    events.forEach(event => {\n      const handler =\n        this.props[`${toCamelCase(type)}${eventToHandler[event]}`] || null;\n\n      if (handler) {\n        map.on(event, layerId, handler);\n      }\n    });\n  };\n\n  private onStyleDataChange = () => {\n    // if the style of the map has been updated and we don't have layer anymore,\n    // add it back to the map and force re-rendering to redraw it\n    if (!this.props.map.getSource(this.id)) {\n      this.unbind();\n      this.initialize();\n      this.forceUpdate();\n    }\n  };\n\n  private initialize() {\n    const { map } = this.props;\n\n    map.addSource(this.id, this.source);\n\n    this.createLayer('symbol');\n    this.createLayer('line');\n    this.createLayer('fill');\n    this.createLayer('fill-extrusion');\n    this.createLayer('circle');\n  }\n\n  private unbind() {\n    const { map } = this.props;\n\n    if (map.getSource(this.id)) {\n      const { layers } = map.getStyle();\n\n      if (layers) {\n        layers\n          .filter(layer => layer.source === this.id)\n          .forEach(layer => map.removeLayer(layer.id));\n      }\n\n      map.removeSource(this.id);\n    }\n\n    types.forEach(type => {\n      const events = Object.keys(eventToHandler) as MapboxEventTypes;\n      events.forEach(event => {\n        const prop = toCamelCase(type) + eventToHandler[event];\n\n        if (this.props[prop]) {\n          map.off(event, this.buildLayerId(type), this.props[prop]);\n        }\n      });\n    });\n\n    this.layerIds.forEach(lId => {\n      if (map.getLayer(lId)) {\n        map.removeLayer(lId);\n      }\n    });\n  }\n\n  public componentDidMount() {\n    const { map } = this.props;\n    this.initialize();\n    map.on('styledata', this.onStyleDataChange);\n  }\n\n  public componentWillUnmount() {\n    const { map } = this.props;\n\n    if (!map || !map.getStyle()) {\n      return;\n    }\n\n    map.off('styledata', this.onStyleDataChange);\n\n    this.unbind();\n  }\n\n  public isGeoJSONSource = (\n    source?: Sources\n  ): source is MapboxGL.GeoJSONSource =>\n    !!source &&\n    typeof (source as MapboxGL.GeoJSONSource).setData === 'function';\n\n  public componentDidUpdate(prevProps: Props) {\n    const { data, before, layerOptions, map } = prevProps;\n    const source = map.getSource(this.id);\n    if (!this.isGeoJSONSource(source)) {\n      return;\n    }\n\n    if (this.props.data !== data) {\n      source.setData(this.props.data);\n\n      this.source = {\n        type: 'geojson',\n        ...this.props.sourceOptions,\n        data: this.props.data\n        // tslint:disable-next-line:no-any\n      } as any;\n    }\n\n    const layerFilterChanged =\n      this.props.layerOptions &&\n      layerOptions &&\n      !isEqual(this.props.layerOptions.filter, layerOptions.filter);\n\n    types.forEach(type => {\n      const layerId = this.buildLayerId(type);\n\n      if (this.props.layerOptions && layerFilterChanged) {\n        map.setFilter(layerId, this.props.layerOptions.filter || []);\n      }\n\n      const paintProp = toCamelCase(type) + 'Paint';\n\n      if (!isEqual(prevProps[paintProp], this.props[paintProp])) {\n        const paintDiff = diff(prevProps[paintProp], this.props[paintProp]);\n\n        Object.keys(paintDiff).forEach(key => {\n          map.setPaintProperty(layerId, key, paintDiff[key]);\n        });\n      }\n\n      const layoutProp = toCamelCase(type) + 'Layout';\n\n      if (!isEqual(prevProps[layoutProp], this.props[layoutProp])) {\n        const layoutDiff = diff(prevProps[layoutProp], this.props[layoutProp]);\n\n        Object.keys(layoutDiff).forEach(key => {\n          map.setLayoutProperty(layerId, key, layoutDiff[key]);\n        });\n      }\n\n      const events = Object.keys(eventToHandler) as MapboxEventTypes;\n\n      events.forEach(event => {\n        const prop = toCamelCase(type) + eventToHandler[event];\n\n        if (prevProps[prop] !== this.props[prop]) {\n          if (prevProps[prop]) {\n            map.off(event, layerId, prevProps[prop]);\n          }\n\n          if (this.props[prop]) {\n            map.on(event, layerId, this.props[prop]);\n          }\n        }\n      });\n\n      if (before !== this.props.before) {\n        map.moveLayer(layerId, this.props.before);\n      }\n    });\n  }\n\n  public render() {\n    return null;\n  }\n}\n\nexport default withMap(GeoJSONLayer);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,IAAMC,OAAO,GAAGC,OAAO,CAAC,YAAY,CAAC;AACrC,OAAOC,IAAI,MAAM,aAAa;AAC9B,SAASC,UAAU,QAAQ,YAAY;AAEvC,SAASC,OAAO,QAAQ,WAAW;AAEnC,IAAMC,KAAK,GAAG,CAAC,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,gBAAgB,EAAE,QAAQ,CAAC;AACpE,IAAMC,WAAW,GAAG,SAAAA,CAACC,GAAW;EAC9B,OAAAA,GAAG,CACAC,OAAO,CACN,qBAAqB,EACrB,UAACC,MAAM,EAAEC,KAAK;IACZ,OAAAA,KAAK,KAAK,CAAC,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAGF,MAAM,CAACG,WAAW,EAAE;EAAzD,CAAyD,CAC5D,CACAJ,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;AAN1B,CAM0B;AAE5B,IAAMK,cAAc,GAAG;EACrBC,SAAS,EAAE,aAAa;EACxBC,UAAU,EAAE,cAAc;EAC1BC,UAAU,EAAE,cAAc;EAC1BC,SAAS,EAAE,aAAa;EACxBC,OAAO,EAAE,WAAW;EACpBC,KAAK,EAAE;CACR;AA8FD,IAAAC,YAAA,aAAAC,MAAA;EAAkCC,SAAA,CAAAF,YAAA,EAAAC,MAAA;EAAlC,SAAAD,aAAA;IAAA,IAAAG,KAAA,GAAAF,MAAA,aAAAA,MAAA,CAAAG,KAAA,OAAAC,SAAA;IACUF,KAAA,CAAAG,EAAE,GAAWH,KAAI,CAACI,KAAK,CAACD,EAAE,IAAI,aAAWvB,UAAU,EAAI;IAGvDoB,KAAA,CAAAK,MAAM,GAAYC,QAAA;MACxBC,IAAI,EAAE;IAAS,GACZP,KAAI,CAACI,KAAK,CAACI,aAAa;MAC3BC,IAAI,EAAET,KAAI,CAACI,KAAK,CAACK;IAAI,EAEf;IAEAT,KAAA,CAAAU,QAAQ,GAAa,EAAE;IAEvBV,KAAA,CAAAW,YAAY,GAAG,UAACJ,IAAY;MAClC,OAAUP,KAAI,CAACG,EAAE,SAAII,IAAM;IAC7B,CAAC;IAEOP,KAAA,CAAAY,WAAW,GAAG,UAACL,IAAe;MAC9B,IAAAM,EAAA,GAAAb,KAAA,CAAAI,KAA0C;QAAxCU,MAAA,GAAAD,EAAA,CAAAC,MAAM;QAAEC,YAAA,GAAAF,EAAA,CAAAE,YAAY;QAAEC,GAAA,GAAAH,EAAA,CAAAG,GAAkB;MAEhD,IAAMC,OAAO,GAAGjB,KAAI,CAACW,YAAY,CAACJ,IAAI,CAAC;MACvCP,KAAI,CAACU,QAAQ,CAACQ,IAAI,CAACD,OAAO,CAAC;MAE3B,IAAME,KAAK,GAAWnB,KAAI,CAACI,KAAK,CAAIrB,WAAW,CAACwB,IAAI,CAAC,UAAO,CAAC,IAAI,EAAE;MAGnE,IAAMa,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,MAAM,GAAG,SAAS,GAAG,MAAM;MACjE,IAAMC,MAAM,GAAYxB,KAAI,CAACI,KAAK,CAAIrB,WAAW,CAACwB,IAAI,CAAC,WAAQ,CAAC,IAAI;QAClEa,UAAU,EAAAA;OACX;MAED,IAAMK,KAAK,GAAAnB,QAAA;QACTH,EAAE,EAAEc,OAAO;QACXZ,MAAM,EAAEL,KAAI,CAACG,EAAE;QAGfI,IAAI,EAAEA,IAAW;QAGjBY,KAAK,EAAEA,KAAY;QACnBK,MAAM,EAAAA;MAAA,GACHT,YAAY,CAChB;MAEDC,GAAG,CAACU,QAAQ,CAACD,KAAK,EAAEX,MAAM,CAAC;MAE3Bd,KAAI,CAAC2B,qBAAqB,CAACpB,IAAI,CAAC;IAClC,CAAC;IAEOP,KAAA,CAAA2B,qBAAqB,GAAG,UAACpB,IAAY;MACnC,IAAAS,GAAA,GAAAhB,KAAA,CAAAI,KAAA,CAAAY,GAAG;MAEX,IAAMC,OAAO,GAAGjB,KAAI,CAACW,YAAY,CAACJ,IAAI,CAAC;MAEvC,IAAMqB,MAAM,GAAGP,MAAM,CAACC,IAAI,CAAChC,cAAc,CAAqB;MAE9DsC,MAAM,CAACC,OAAO,CAAC,UAAAC,KAAK;QAClB,IAAMC,OAAO,GACX/B,KAAI,CAACI,KAAK,CAAC,KAAGrB,WAAW,CAACwB,IAAI,CAAC,GAAGjB,cAAc,CAACwC,KAAK,CAAG,CAAC,IAAI,IAAI;QAEpE,IAAIC,OAAO,EAAE;UACXf,GAAG,CAACgB,EAAE,CAACF,KAAK,EAAEb,OAAO,EAAEc,OAAO,CAAC;;MAEnC,CAAC,CAAC;IACJ,CAAC;IAEO/B,KAAA,CAAAiC,iBAAiB,GAAG;MAG1B,IAAI,CAACjC,KAAI,CAACI,KAAK,CAACY,GAAG,CAACkB,SAAS,CAAClC,KAAI,CAACG,EAAE,CAAC,EAAE;QACtCH,KAAI,CAACmC,MAAM,EAAE;QACbnC,KAAI,CAACoC,UAAU,EAAE;QACjBpC,KAAI,CAACqC,WAAW,EAAE;;IAEtB,CAAC;IAiEMrC,KAAA,CAAAsC,eAAe,GAAG,UACvBjC,MAAgB;MAEhB,QAAC,CAACA,MAAM,IACR,OAAQA,MAAiC,CAACkC,OAAO,KAAK,UAAU;IADhE,CACgE;;EA6EpE;EAhJU1C,YAAA,CAAA2C,SAAA,CAAAJ,UAAU,GAAlB;IACU,IAAApB,GAAA,QAAAZ,KAAA,CAAAY,GAAG;IAEXA,GAAG,CAACyB,SAAS,CAAC,IAAI,CAACtC,EAAE,EAAE,IAAI,CAACE,MAAM,CAAC;IAEnC,IAAI,CAACO,WAAW,CAAC,QAAQ,CAAC;IAC1B,IAAI,CAACA,WAAW,CAAC,MAAM,CAAC;IACxB,IAAI,CAACA,WAAW,CAAC,MAAM,CAAC;IACxB,IAAI,CAACA,WAAW,CAAC,gBAAgB,CAAC;IAClC,IAAI,CAACA,WAAW,CAAC,QAAQ,CAAC;EAC5B,CAAC;EAEOf,YAAA,CAAA2C,SAAA,CAAAL,MAAM,GAAd;IAAA,IAAAnC,KAAA;IACU,IAAAgB,GAAA,QAAAZ,KAAA,CAAAY,GAAG;IAEX,IAAIA,GAAG,CAACkB,SAAS,CAAC,IAAI,CAAC/B,EAAE,CAAC,EAAE;MAClB,IAAAuC,MAAA,GAAA1B,GAAA,CAAA2B,QAAA,GAAAD,MAAM;MAEd,IAAIA,MAAM,EAAE;QACVA,MAAM,CACHE,MAAM,CAAC,UAAAnB,KAAK;UAAI,OAAAA,KAAK,CAACpB,MAAM,KAAKL,KAAI,CAACG,EAAE;QAAxB,CAAwB,CAAC,CACzC0B,OAAO,CAAC,UAAAJ,KAAK;UAAI,OAAAT,GAAG,CAAC6B,WAAW,CAACpB,KAAK,CAACtB,EAAE,CAAC;QAAzB,CAAyB,CAAC;;MAGhDa,GAAG,CAAC8B,YAAY,CAAC,IAAI,CAAC3C,EAAE,CAAC;;IAG3BrB,KAAK,CAAC+C,OAAO,CAAC,UAAAtB,IAAI;MAChB,IAAMqB,MAAM,GAAGP,MAAM,CAACC,IAAI,CAAChC,cAAc,CAAqB;MAC9DsC,MAAM,CAACC,OAAO,CAAC,UAAAC,KAAK;QAClB,IAAMiB,IAAI,GAAGhE,WAAW,CAACwB,IAAI,CAAC,GAAGjB,cAAc,CAACwC,KAAK,CAAC;QAEtD,IAAI9B,KAAI,CAACI,KAAK,CAAC2C,IAAI,CAAC,EAAE;UACpB/B,GAAG,CAACgC,GAAG,CAAClB,KAAK,EAAE9B,KAAI,CAACW,YAAY,CAACJ,IAAI,CAAC,EAAEP,KAAI,CAACI,KAAK,CAAC2C,IAAI,CAAC,CAAC;;MAE7D,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAI,CAACrC,QAAQ,CAACmB,OAAO,CAAC,UAAAoB,GAAG;MACvB,IAAIjC,GAAG,CAACkC,QAAQ,CAACD,GAAG,CAAC,EAAE;QACrBjC,GAAG,CAAC6B,WAAW,CAACI,GAAG,CAAC;;IAExB,CAAC,CAAC;EACJ,CAAC;EAEMpD,YAAA,CAAA2C,SAAA,CAAAW,iBAAiB,GAAxB;IACU,IAAAnC,GAAA,QAAAZ,KAAA,CAAAY,GAAG;IACX,IAAI,CAACoB,UAAU,EAAE;IACjBpB,GAAG,CAACgB,EAAE,CAAC,WAAW,EAAE,IAAI,CAACC,iBAAiB,CAAC;EAC7C,CAAC;EAEMpC,YAAA,CAAA2C,SAAA,CAAAY,oBAAoB,GAA3B;IACU,IAAApC,GAAA,QAAAZ,KAAA,CAAAY,GAAG;IAEX,IAAI,CAACA,GAAG,IAAI,CAACA,GAAG,CAAC2B,QAAQ,EAAE,EAAE;MAC3B;;IAGF3B,GAAG,CAACgC,GAAG,CAAC,WAAW,EAAE,IAAI,CAACf,iBAAiB,CAAC;IAE5C,IAAI,CAACE,MAAM,EAAE;EACf,CAAC;EAQMtC,YAAA,CAAA2C,SAAA,CAAAa,kBAAkB,GAAzB,UAA0BC,SAAgB;IAA1C,IAAAtD,KAAA;IACU,IAAAS,IAAA,GAAA6C,SAAA,CAAA7C,IAAI;MAAEK,MAAA,GAAAwC,SAAA,CAAAxC,MAAM;MAAEC,YAAA,GAAAuC,SAAA,CAAAvC,YAAY;MAAEC,GAAA,GAAAsC,SAAA,CAAAtC,GAAG;IACvC,IAAMX,MAAM,GAAGW,GAAG,CAACkB,SAAS,CAAC,IAAI,CAAC/B,EAAE,CAAC;IACrC,IAAI,CAAC,IAAI,CAACmC,eAAe,CAACjC,MAAM,CAAC,EAAE;MACjC;;IAGF,IAAI,IAAI,CAACD,KAAK,CAACK,IAAI,KAAKA,IAAI,EAAE;MAC5BJ,MAAM,CAACkC,OAAO,CAAC,IAAI,CAACnC,KAAK,CAACK,IAAI,CAAC;MAE/B,IAAI,CAACJ,MAAM,GAAGC,QAAA;QACZC,IAAI,EAAE;MAAS,GACZ,IAAI,CAACH,KAAK,CAACI,aAAa;QAC3BC,IAAI,EAAE,IAAI,CAACL,KAAK,CAACK;MAAI,EAEf;;IAGV,IAAM8C,kBAAkB,GACtB,IAAI,CAACnD,KAAK,CAACW,YAAY,IACvBA,YAAY,IACZ,CAACtC,OAAO,CAAC,IAAI,CAAC2B,KAAK,CAACW,YAAY,CAAC6B,MAAM,EAAE7B,YAAY,CAAC6B,MAAM,CAAC;IAE/D9D,KAAK,CAAC+C,OAAO,CAAC,UAAAtB,IAAI;MAChB,IAAMU,OAAO,GAAGjB,KAAI,CAACW,YAAY,CAACJ,IAAI,CAAC;MAEvC,IAAIP,KAAI,CAACI,KAAK,CAACW,YAAY,IAAIwC,kBAAkB,EAAE;QACjDvC,GAAG,CAACwC,SAAS,CAACvC,OAAO,EAAEjB,KAAI,CAACI,KAAK,CAACW,YAAY,CAAC6B,MAAM,IAAI,EAAE,CAAC;;MAG9D,IAAMa,SAAS,GAAG1E,WAAW,CAACwB,IAAI,CAAC,GAAG,OAAO;MAE7C,IAAI,CAAC9B,OAAO,CAAC6E,SAAS,CAACG,SAAS,CAAC,EAAEzD,KAAI,CAACI,KAAK,CAACqD,SAAS,CAAC,CAAC,EAAE;QACzD,IAAMC,WAAS,GAAG/E,IAAI,CAAC2E,SAAS,CAACG,SAAS,CAAC,EAAEzD,KAAI,CAACI,KAAK,CAACqD,SAAS,CAAC,CAAC;QAEnEpC,MAAM,CAACC,IAAI,CAACoC,WAAS,CAAC,CAAC7B,OAAO,CAAC,UAAA8B,GAAG;UAChC3C,GAAG,CAAC4C,gBAAgB,CAAC3C,OAAO,EAAE0C,GAAG,EAAED,WAAS,CAACC,GAAG,CAAC,CAAC;QACpD,CAAC,CAAC;;MAGJ,IAAME,UAAU,GAAG9E,WAAW,CAACwB,IAAI,CAAC,GAAG,QAAQ;MAE/C,IAAI,CAAC9B,OAAO,CAAC6E,SAAS,CAACO,UAAU,CAAC,EAAE7D,KAAI,CAACI,KAAK,CAACyD,UAAU,CAAC,CAAC,EAAE;QAC3D,IAAMC,YAAU,GAAGnF,IAAI,CAAC2E,SAAS,CAACO,UAAU,CAAC,EAAE7D,KAAI,CAACI,KAAK,CAACyD,UAAU,CAAC,CAAC;QAEtExC,MAAM,CAACC,IAAI,CAACwC,YAAU,CAAC,CAACjC,OAAO,CAAC,UAAA8B,GAAG;UACjC3C,GAAG,CAAC+C,iBAAiB,CAAC9C,OAAO,EAAE0C,GAAG,EAAEG,YAAU,CAACH,GAAG,CAAC,CAAC;QACtD,CAAC,CAAC;;MAGJ,IAAM/B,MAAM,GAAGP,MAAM,CAACC,IAAI,CAAChC,cAAc,CAAqB;MAE9DsC,MAAM,CAACC,OAAO,CAAC,UAAAC,KAAK;QAClB,IAAMiB,IAAI,GAAGhE,WAAW,CAACwB,IAAI,CAAC,GAAGjB,cAAc,CAACwC,KAAK,CAAC;QAEtD,IAAIwB,SAAS,CAACP,IAAI,CAAC,KAAK/C,KAAI,CAACI,KAAK,CAAC2C,IAAI,CAAC,EAAE;UACxC,IAAIO,SAAS,CAACP,IAAI,CAAC,EAAE;YACnB/B,GAAG,CAACgC,GAAG,CAAClB,KAAK,EAAEb,OAAO,EAAEqC,SAAS,CAACP,IAAI,CAAC,CAAC;;UAG1C,IAAI/C,KAAI,CAACI,KAAK,CAAC2C,IAAI,CAAC,EAAE;YACpB/B,GAAG,CAACgB,EAAE,CAACF,KAAK,EAAEb,OAAO,EAAEjB,KAAI,CAACI,KAAK,CAAC2C,IAAI,CAAC,CAAC;;;MAG9C,CAAC,CAAC;MAEF,IAAIjC,MAAM,KAAKd,KAAI,CAACI,KAAK,CAACU,MAAM,EAAE;QAChCE,GAAG,CAACgD,SAAS,CAAC/C,OAAO,EAAEjB,KAAI,CAACI,KAAK,CAACU,MAAM,CAAC;;IAE7C,CAAC,CAAC;EACJ,CAAC;EAEMjB,YAAA,CAAA2C,SAAA,CAAAyB,MAAM,GAAb;IACE,OAAO,IAAI;EACb,CAAC;EACH,OAAApE,YAAC;AAAD,CAAC,CA5NiCrB,KAAK,CAAC0F,SAAS;;AA8NjD,eAAerF,OAAO,CAACgB,YAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}