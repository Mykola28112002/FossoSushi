{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nvar isEqual = require('deep-equal');\nimport diff from './util/diff';\nvar eventToHandler = {\n  touchstart: 'onTouchStart',\n  touchend: 'onTouchEnd',\n  touchcancel: 'onTouchCancel',\n  mousemove: 'onMouseMove',\n  mouseenter: 'onMouseEnter',\n  mouseleave: 'onMouseLeave',\n  mousedown: 'onMouseDown',\n  mouseup: 'onMouseUp',\n  click: 'onClick'\n};\nvar Layer = function (_super) {\n  __extends(Layer, _super);\n  function Layer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.source = __assign({\n      type: 'geojson'\n    }, _this.props.geoJSONSourceOptions, {\n      data: {\n        type: 'FeatureCollection',\n        features: []\n      }\n    });\n    _this.geometry = function (coordinates) {\n      switch (_this.props.type) {\n        case 'symbol':\n        case 'circle':\n          return {\n            type: 'Point',\n            coordinates: coordinates\n          };\n        case 'fill':\n          if (Array.isArray(coordinates[0][0][0])) {\n            return {\n              type: 'MultiPolygon',\n              coordinates: coordinates\n            };\n          }\n          return {\n            type: 'Polygon',\n            coordinates: coordinates\n          };\n        case 'line':\n          return {\n            type: 'LineString',\n            coordinates: coordinates\n          };\n        default:\n          return {\n            type: 'Point',\n            coordinates: coordinates\n          };\n      }\n    };\n    _this.makeFeature = function (props, id) {\n      return {\n        type: 'Feature',\n        geometry: _this.geometry(props.coordinates),\n        properties: __assign({}, props.properties, {\n          id: id\n        })\n      };\n    };\n    _this.initialize = function () {\n      var _a = _this.props,\n        type = _a.type,\n        layout = _a.layout,\n        paint = _a.paint,\n        sourceId = _a.sourceId,\n        before = _a.before,\n        images = _a.images,\n        id = _a.id,\n        metadata = _a.metadata,\n        sourceLayer = _a.sourceLayer,\n        minZoom = _a.minZoom,\n        maxZoom = _a.maxZoom,\n        filter = _a.filter;\n      var map = _this.props.map;\n      var layer = {\n        id: id,\n        source: sourceId || id,\n        type: type,\n        layout: layout,\n        paint: paint,\n        metadata: metadata\n      };\n      if (sourceLayer) {\n        layer['source-layer'] = sourceLayer;\n      }\n      if (minZoom) {\n        layer.minzoom = minZoom;\n      }\n      if (maxZoom) {\n        layer.maxzoom = maxZoom;\n      }\n      if (filter) {\n        layer.filter = filter;\n      }\n      if (images) {\n        var normalizedImages = !Array.isArray(images[0]) ? [images] : images;\n        normalizedImages.filter(function (image) {\n          return !map.hasImage(image[0]);\n        }).forEach(function (image) {\n          map.addImage(image[0], image[1], image[2]);\n        });\n      }\n      if (!sourceId && !map.getSource(id)) {\n        map.addSource(id, _this.source);\n      }\n      if (!map.getLayer(id)) {\n        map.addLayer(layer, before);\n      }\n      Object.entries(eventToHandler).forEach(function (_a) {\n        var event = _a[0],\n          propName = _a[1];\n        var handler = _this.props[propName];\n        if (handler) {\n          map.on(event, id, handler);\n        }\n      });\n    };\n    _this.onStyleDataChange = function () {\n      if (!_this.props.map.getLayer(_this.props.id)) {\n        _this.initialize();\n        _this.forceUpdate();\n      }\n    };\n    _this.getChildren = function () {\n      var children = _this.props.children;\n      if (!children) {\n        return [];\n      }\n      if (Array.isArray(children)) {\n        return children.reduce(function (arr, next) {\n          return arr.concat(next);\n        }, []);\n      }\n      return [children];\n    };\n    return _this;\n  }\n  Layer.prototype.componentDidMount = function () {\n    var map = this.props.map;\n    this.initialize();\n    map.on('styledata', this.onStyleDataChange);\n  };\n  Layer.prototype.componentWillUnmount = function () {\n    var _this = this;\n    var map = this.props.map;\n    var _a = this.props,\n      images = _a.images,\n      id = _a.id;\n    if (!map || !map.getStyle()) {\n      return;\n    }\n    map.off('styledata', this.onStyleDataChange);\n    Object.entries(eventToHandler).forEach(function (_a) {\n      var event = _a[0],\n        propName = _a[1];\n      var handler = _this.props[propName];\n      if (handler) {\n        map.off(event, id, handler);\n      }\n    });\n    if (map.getLayer(id)) {\n      map.removeLayer(id);\n    }\n    if (!this.props.sourceId) {\n      map.removeSource(id);\n    }\n    if (images) {\n      var normalizedImages = !Array.isArray(images[0]) ? [images] : images;\n      normalizedImages.map(function (_a) {\n        var key = _a[0],\n          rest = _a.slice(1);\n        return key;\n      }).forEach(map.removeImage.bind(map));\n    }\n  };\n  Layer.prototype.componentDidUpdate = function (prevProps) {\n    var _this = this;\n    var paint = prevProps.paint,\n      layout = prevProps.layout,\n      before = prevProps.before,\n      filter = prevProps.filter,\n      id = prevProps.id,\n      minZoom = prevProps.minZoom,\n      maxZoom = prevProps.maxZoom,\n      map = prevProps.map;\n    if (!isEqual(this.props.paint, paint)) {\n      var paintDiff_1 = diff(paint, this.props.paint);\n      Object.keys(paintDiff_1).forEach(function (key) {\n        map.setPaintProperty(id, key, paintDiff_1[key]);\n      });\n    }\n    if (!isEqual(this.props.layout, layout)) {\n      var layoutDiff_1 = diff(layout, this.props.layout);\n      Object.keys(layoutDiff_1).forEach(function (key) {\n        map.setLayoutProperty(id, key, layoutDiff_1[key]);\n      });\n    }\n    if (!isEqual(this.props.filter, filter)) {\n      map.setFilter(id, this.props.filter);\n    }\n    if (before !== this.props.before) {\n      map.moveLayer(id, this.props.before);\n    }\n    if (minZoom !== this.props.minZoom || maxZoom !== this.props.maxZoom) {\n      map.setLayerZoomRange(id, this.props.minZoom, this.props.maxZoom);\n    }\n    Object.entries(eventToHandler).forEach(function (_a) {\n      var event = _a[0],\n        propName = _a[1];\n      var oldHandler = prevProps[propName];\n      var newHandler = _this.props[propName];\n      if (oldHandler !== newHandler) {\n        if (oldHandler) {\n          map.off(event, id, oldHandler);\n        }\n        if (newHandler) {\n          map.on(event, id, newHandler);\n        }\n      }\n    });\n  };\n  Layer.prototype.render = function () {\n    var _this = this;\n    var map = this.props.map;\n    var _a = this.props,\n      sourceId = _a.sourceId,\n      draggedChildren = _a.draggedChildren;\n    var children = this.getChildren();\n    if (draggedChildren) {\n      var draggableChildrenIds_1 = draggedChildren.map(function (child) {\n        return child.key;\n      });\n      children = children.map(function (child) {\n        var indexChildren = draggableChildrenIds_1.indexOf(child.key);\n        if (indexChildren !== -1) {\n          return draggedChildren[indexChildren];\n        }\n        return child;\n      });\n    }\n    var features = children.map(function (_a, id) {\n      var props = _a.props;\n      return _this.makeFeature(props, id);\n    }).filter(Boolean);\n    var source = map.getSource(sourceId || this.props.id);\n    if (source && !sourceId && source.setData) {\n      source.setData({\n        type: 'FeatureCollection',\n        features: features\n      });\n    }\n    return null;\n  };\n  Layer.defaultProps = {\n    type: 'symbol',\n    layout: {},\n    paint: {}\n  };\n  return Layer;\n}(React.Component);\nexport default Layer;","map":{"version":3,"names":["React","isEqual","require","diff","eventToHandler","touchstart","touchend","touchcancel","mousemove","mouseenter","mouseleave","mousedown","mouseup","click","Layer","_super","__extends","_this","apply","arguments","source","__assign","type","props","geoJSONSourceOptions","data","features","geometry","coordinates","Array","isArray","makeFeature","id","properties","initialize","_a","layout","paint","sourceId","before","images","metadata","sourceLayer","minZoom","maxZoom","filter","map","layer","minzoom","maxzoom","normalizedImages","image","hasImage","forEach","addImage","getSource","addSource","getLayer","addLayer","Object","entries","event","propName","handler","on","onStyleDataChange","forceUpdate","getChildren","children","reduce","arr","next","concat","prototype","componentDidMount","componentWillUnmount","getStyle","off","removeLayer","removeSource","key","rest","slice","removeImage","bind","componentDidUpdate","prevProps","paintDiff_1","keys","setPaintProperty","layoutDiff_1","setLayoutProperty","setFilter","moveLayer","setLayerZoomRange","oldHandler","newHandler","render","draggedChildren","draggableChildrenIds_1","child","indexChildren","indexOf","Boolean","setData","defaultProps","Component"],"sources":["/Users/mikolakondratuk/FossoSushi/node_modules/react-mapbox-gl/src/layer.ts"],"sourcesContent":["import * as React from 'react';\nimport * as MapboxGL from 'mapbox-gl';\nconst isEqual = require('deep-equal'); //tslint:disable-line\nimport diff from './util/diff';\nimport { Props as FeatureProps } from './feature';\n\nexport type Paint =\n  | MapboxGL.BackgroundPaint\n  | MapboxGL.FillPaint\n  | MapboxGL.FillExtrusionPaint\n  | MapboxGL.SymbolPaint\n  | MapboxGL.LinePaint\n  | MapboxGL.RasterPaint\n  | MapboxGL.CirclePaint;\n\nexport type Layout =\n  | MapboxGL.BackgroundLayout\n  | MapboxGL.FillLayout\n  | MapboxGL.FillExtrusionLayout\n  | MapboxGL.LineLayout\n  | MapboxGL.SymbolLayout\n  | MapboxGL.RasterLayout\n  | MapboxGL.CircleLayout;\n\nexport interface ImageOptions {\n  width?: number;\n  height?: number;\n  pixelRatio?: number;\n}\nexport type ImageDefinition = [string, HTMLImageElement];\nexport type ImageDefinitionWithOptions = [\n  string,\n  HTMLImageElement,\n  ImageOptions\n];\n\n// tslint:disable-next-line:no-any\nexport type MouseEvent = (evt: any) => any;\n\nexport interface LayerEvents {\n  onMouseMove?: MouseEvent;\n  onMouseEnter?: MouseEvent;\n  onMouseLeave?: MouseEvent;\n  onMouseDown?: MouseEvent;\n  onMouseUp?: MouseEvent;\n  onClick?: MouseEvent;\n  onTouchStart?: MouseEvent;\n  onTouchEnd?: MouseEvent;\n  onTouchCancel?: MouseEvent;\n}\n\nexport interface LayerCommonProps {\n  type?:\n    | 'symbol'\n    | 'line'\n    | 'fill'\n    | 'circle'\n    | 'raster'\n    | 'fill-extrusion'\n    | 'background'\n    | 'heatmap';\n  sourceId?: string;\n  images?:\n    | ImageDefinition\n    | ImageDefinition[]\n    | ImageDefinitionWithOptions\n    | ImageDefinitionWithOptions[];\n  before?: string;\n  paint?: Paint;\n  layout?: Layout;\n  // tslint:disable-next-line:no-any\n  metadata?: any;\n  sourceLayer?: string;\n  minZoom?: number;\n  maxZoom?: number;\n  geoJSONSourceOptions?: MapboxGL.GeoJSONSourceOptions;\n  // tslint:disable-next-line:no-any\n  filter?: any[];\n  children?: JSX.Element | JSX.Element[];\n}\n\nexport interface OwnProps {\n  id: string;\n  draggedChildren?: JSX.Element[];\n  map: MapboxGL.Map;\n}\n\nexport type Props = LayerCommonProps & LayerEvents & OwnProps;\n\ntype EventToHandlersType = {\n  [key in keyof MapboxGL.MapLayerEventType]?: keyof LayerEvents\n};\n\nconst eventToHandler: EventToHandlersType = {\n  touchstart: 'onTouchStart',\n  touchend: 'onTouchEnd',\n  touchcancel: 'onTouchCancel',\n  mousemove: 'onMouseMove',\n  mouseenter: 'onMouseEnter',\n  mouseleave: 'onMouseLeave',\n  mousedown: 'onMouseDown',\n  mouseup: 'onMouseUp',\n  click: 'onClick'\n};\n\nexport default class Layer extends React.Component<Props> {\n  public static defaultProps = {\n    type: 'symbol' as 'symbol',\n    layout: {},\n    paint: {}\n  };\n\n  private source: MapboxGL.GeoJSONSourceRaw = {\n    type: 'geojson',\n    ...this.props.geoJSONSourceOptions,\n    data: {\n      type: 'FeatureCollection',\n      features: []\n    }\n  };\n\n  // tslint:disable-next-line:no-any\n  private geometry = (coordinates: any): GeoJSON.Geometry => {\n    switch (this.props.type) {\n      case 'symbol':\n      case 'circle':\n        return {\n          type: 'Point',\n          coordinates\n        };\n\n      case 'fill':\n        if (Array.isArray(coordinates[0][0][0])) {\n          return {\n            type: 'MultiPolygon',\n            coordinates\n          };\n        }\n        return {\n          type: 'Polygon',\n          coordinates\n        };\n\n      case 'line':\n        return {\n          type: 'LineString',\n          coordinates\n        };\n\n      default:\n        return {\n          type: 'Point',\n          coordinates\n        };\n    }\n  };\n\n  private makeFeature = (\n    props: FeatureProps,\n    id: number\n  ): GeoJSON.Feature<GeoJSON.Geometry, GeoJSON.GeoJsonProperties> => ({\n    type: 'Feature',\n    geometry: this.geometry(props.coordinates),\n    properties: { ...props.properties, id }\n  });\n\n  private initialize = () => {\n    const {\n      type,\n      layout,\n      paint,\n      sourceId,\n      before,\n      images,\n      id,\n      metadata,\n      sourceLayer,\n      minZoom,\n      maxZoom,\n      filter\n    } = this.props;\n    const { map } = this.props;\n\n    const layer: MapboxGL.Layer = {\n      id,\n      source: sourceId || id,\n      // TODO: Fix mapbox-gl types\n      // tslint:disable-next-line:no-any\n      type: type as any,\n      layout,\n      // TODO: Fix mapbox-gl types\n      // tslint:disable-next-line:no-any\n      paint: paint as any,\n      metadata\n    };\n\n    if (sourceLayer) {\n      layer['source-layer'] = sourceLayer;\n    }\n\n    if (minZoom) {\n      layer.minzoom = minZoom;\n    }\n\n    if (maxZoom) {\n      layer.maxzoom = maxZoom;\n    }\n\n    if (filter) {\n      layer.filter = filter;\n    }\n\n    if (images) {\n      const normalizedImages = !Array.isArray(images[0]) ? [images] : images;\n      (normalizedImages as ImageDefinitionWithOptions[])\n        .filter(image => !map.hasImage(image[0]))\n        .forEach(image => {\n          map.addImage(image[0], image[1], image[2]);\n        });\n    }\n\n    if (!sourceId && !map.getSource(id)) {\n      map.addSource(id, this.source);\n    }\n\n    if (!map.getLayer(id)) {\n      map.addLayer(layer, before);\n    }\n\n    (Object.entries(eventToHandler) as Array<\n      [keyof EventToHandlersType, keyof LayerEvents]\n    >).forEach(([event, propName]) => {\n      const handler = this.props[propName];\n      if (handler) {\n        map.on(event, id, handler);\n      }\n    });\n  };\n\n  private onStyleDataChange = () => {\n    // if the style of the map has been updated and we don't have layer anymore,\n    // add it back to the map and force re-rendering to redraw it\n    if (!this.props.map.getLayer(this.props.id)) {\n      this.initialize();\n      this.forceUpdate();\n    }\n  };\n\n  public componentDidMount() {\n    const { map } = this.props;\n\n    this.initialize();\n\n    map.on('styledata', this.onStyleDataChange);\n  }\n\n  public componentWillUnmount() {\n    const { map } = this.props;\n    const { images, id } = this.props;\n\n    if (!map || !map.getStyle()) {\n      return;\n    }\n\n    map.off('styledata', this.onStyleDataChange);\n\n    (Object.entries(eventToHandler) as Array<\n      [keyof EventToHandlersType, keyof LayerEvents]\n    >).forEach(([event, propName]) => {\n      const handler = this.props[propName];\n      if (handler) {\n        map.off(event, id, handler);\n      }\n    });\n\n    if (map.getLayer(id)) {\n      map.removeLayer(id);\n    }\n    // if pointing to an existing source, don't remove\n    // as other layers may be dependent upon it\n    if (!this.props.sourceId) {\n      map.removeSource(id);\n    }\n\n    if (images) {\n      const normalizedImages = !Array.isArray(images[0]) ? [images] : images;\n      (normalizedImages as ImageDefinitionWithOptions[])\n        .map(([key, ...rest]) => key)\n        .forEach(map.removeImage.bind(map));\n    }\n  }\n\n  public componentDidUpdate(prevProps: Props) {\n    const {\n      paint,\n      layout,\n      before,\n      filter,\n      id,\n      minZoom,\n      maxZoom,\n      map\n    } = prevProps;\n\n    if (!isEqual(this.props.paint, paint)) {\n      const paintDiff = diff(paint, this.props.paint);\n\n      Object.keys(paintDiff).forEach(key => {\n        map.setPaintProperty(id, key, paintDiff[key]);\n      });\n    }\n\n    if (!isEqual(this.props.layout, layout)) {\n      const layoutDiff = diff(layout, this.props.layout);\n\n      Object.keys(layoutDiff).forEach(key => {\n        map.setLayoutProperty(id, key, layoutDiff[key]);\n      });\n    }\n\n    if (!isEqual(this.props.filter, filter)) {\n      map.setFilter(id, this.props.filter);\n    }\n\n    if (before !== this.props.before) {\n      map.moveLayer(id, this.props.before);\n    }\n\n    if (minZoom !== this.props.minZoom || maxZoom !== this.props.maxZoom) {\n      // TODO: Fix when PR https://github.com/DefinitelyTyped/DefinitelyTyped/pull/22036 is merged\n      map.setLayerZoomRange(id, this.props.minZoom!, this.props.maxZoom!);\n    }\n\n    (Object.entries(eventToHandler) as Array<\n      [keyof EventToHandlersType, keyof LayerEvents]\n    >).forEach(([event, propName]) => {\n      const oldHandler = prevProps[propName];\n      const newHandler = this.props[propName];\n\n      if (oldHandler !== newHandler) {\n        if (oldHandler) {\n          map.off(event, id, oldHandler);\n        }\n\n        if (newHandler) {\n          map.on(event, id, newHandler);\n        }\n      }\n    });\n  }\n\n  public getChildren = () => {\n    const { children } = this.props;\n\n    if (!children) {\n      return [];\n    }\n\n    if (Array.isArray(children)) {\n      return (children as JSX.Element[][]).reduce(\n        (arr, next) => arr.concat(next),\n        [] as JSX.Element[]\n      );\n    }\n\n    return [children] as JSX.Element[];\n  };\n\n  public render() {\n    const { map } = this.props;\n    const { sourceId, draggedChildren } = this.props;\n    let children = this.getChildren();\n\n    if (draggedChildren) {\n      const draggableChildrenIds = draggedChildren.map(child => child.key);\n      children = children.map(child => {\n        const indexChildren = draggableChildrenIds.indexOf(child.key);\n        if (indexChildren !== -1) {\n          return draggedChildren[indexChildren];\n        }\n        return child;\n      });\n    }\n\n    const features = (children! as Array<React.ReactElement<FeatureProps>>)\n      .map(({ props }, id) => this.makeFeature(props, id))\n      .filter(Boolean);\n\n    const source = map.getSource(\n      sourceId || this.props.id\n    ) as MapboxGL.GeoJSONSource;\n\n    if (source && !sourceId && source.setData) {\n      source.setData({\n        type: 'FeatureCollection',\n        features: features as GeoJSON.Feature[]\n      });\n    }\n\n    return null;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}